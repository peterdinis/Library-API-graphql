// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id           Int      @id @default(autoincrement())
  name         String
  description  String
  image        String
  createdYear  DateTime @default(now())
  pages        Int
  authorName   String
  isAvaible    Boolean  @default(true)
  isBorrowed   Boolean  @default(false)
  isReturned   Boolean  @default(false)
  stockNumber  Int      @default(1)
  serialNumber String   @default("11-22-333")
  category     Category @relation(fields: [categoryId], references: [id], onDelete: Restrict)
  categoryId   Int
  author       Author   @relation(fields: [authorId], references: [id], onDelete: Restrict)
  authorId     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Author {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  litPeriod   DateTime  @default(now())
  birthYear   DateTime  @default(now())
  deathYear   DateTime? @default(now())
  books       Book[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Publisher {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdYear DateTime @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}
